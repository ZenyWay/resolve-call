(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var src_1=require("../src");describe("function getResolve (opts?: Partial<ResolveSpec>): Resolve",function(){var e;describe("when called without arguments",function(){beforeEach(function(){e=src_1.default()}),it("returns a function",function(){expect(e).toEqual(jasmine.any(Function))})}),describe("when called with { Promise: { all: Function, resolve: Function } }",function(){var n;beforeEach(function(){n=jasmine.createSpyObj("PromiseMock",["all","resolve"]),n.resolve.and.returnValue("baz"),e=src_1.default({Promise:n});try{e(function(){})("foo","bar")}catch(e){}}),it("returns a function",function(){expect(e).toEqual(jasmine.any(Function))}),it("injects the given Promise implementation in the returned function",function(){expect(n.all).toHaveBeenCalledWith(["baz","baz"]),expect(n.resolve.calls.allArgs()).toEqual([["foo"],["bar"]])})})}),describe("function resolve <T>(fn: (..args: any[]) => T|PromiseLike<T>): (..args: any[]) => PromiseLike<T>",function(){var e;beforeEach(function(){e=src_1.default()}),describe("when called with a function",function(){var n;beforeEach(function(){n=function(){return e(function(){})}}),it("returns a function",function(){expect(n).not.toThrow(),expect(n()).toEqual(jasmine.any(Function))})}),describe("when called with an argument that is not a function",function(){var n;beforeEach(function(){n=[null,void 0,!0,42,"foo",{}].map(function(n){return e.bind(null,{},n)})}),it('throws an "argument is not a function" TypeError',function(){n.forEach(function(e){expect(e).toThrowError(TypeError,"argument is not a function")})})}),describe("the 'resolved' function",function(){var n,t,o;beforeEach(function(i){n=jasmine.createSpy("fn").and.returnValue(Promise.resolve("foo")),t=e(n).bind("this"),t("bar",Promise.resolve("baz"),42).then(function(e){return o=e}).catch(i.fail).then(i)}),it("resolves its arguments then calls the original function with the resolved arguments",function(){expect(n).toHaveBeenCalledWith("bar","baz",42)}),it("returns a Promise that resolves to the resolved result of the original function",function(){expect(o).toBe("foo")}),it("binds the original function's `this` to its own `this`",function(){expect(n.calls.all()).toEqual([jasmine.objectContaining({object:"this"})])})})});
},{"../src":2}],2:[function(require,module,exports){
"use strict";function getPromiseResolver(e){return e&&isValidPromiseResolver(e.Promise)?e.Promise:Promise}function isValidPromiseResolver(e){return!!e&&isFunction(e.all)&&isFunction(e.resolve)}function isFunction(e){return"function"==typeof e}var getResolve=function(e){var r=getPromiseResolver(e);return function(e){if("function"!=typeof e)throw new TypeError("argument is not a function");return function(){for(var n=this,t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];return r.all(t.map(function(e){return r.resolve(e)})).then(function(r){return e.apply(n,r)})}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=getResolve;
},{}]},{},[1]);
